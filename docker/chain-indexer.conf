datastax-java-driver.basic.contact-points = [${CASSANDRA_SEED_HOST}":"${CASSANDRA_SEED_PORT}]
local.ergo.node.host = "localhost"
local.ergo.node.host = ${?LOCAL_ERGO_NODE_HOST}
local.ergo.node.port = "9053"
local.ergo.node.port = ${?LOCAL_ERGO_NODE_PORT}
uexplorer {
    chainIndexer {
        mvStore {
            // xmx - cache-size > 3GB (jvm runtime needs at least 7GB when 4GB is for cache)
            cacheSize = 2048 // in MB

            // the more compaction time the smaller db file but longer indexing time
            maxIndexingCompactTime = 30s

            // same as indexing compaction time but after indexing finished
            maxIdleCompactTime = 1s

            // after how many blocks the compaction process is started, low number => low db file size
            heightCompactRate = 10000
        }

        nodePool {

            // syncing from scratch must be done from a fully synced node available on local network
            nodeAddressToInitFrom = "http://"${local.ergo.node.host}":"${local.ergo.node.port}

            // polling new blocks after sync is done from local node otherwise from the entire peer network (better resiliency)
            peerAddressToPollFrom = "http://213.239.193.208:9053"
        }

        backendType = { type = H2, parallelism = 1 }
        // backend-type = { type = "cassandra", parallelism = ${BACKEND_INDEXING_PARALLELISM} }

        graphBackendType = { type = InMemoryGraph, parallelism = 1 }
        // graphBackendType = { type = "janus-graph" }

        benchmarkMode = true

        core {
          networkPrefix = 0
        }
    }
}

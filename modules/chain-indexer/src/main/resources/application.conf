akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  coordinated-shutdown {
    default-phase-timeout = 15s
    phases {
        service-unbind.timeout = 30s
        before-service-unbind.timeout = 30s
        service-stop.timeout = 30s
      }
  }
}

datastax-java-driver {
  advanced.protocol.version = V4
  session-keyspace = "uexplorer"
  basic {
    contact-points = ["cassandra:9042"]
    load-balancing-policy.local-datacenter = datacenter1
    request.timeout = 10 seconds
  }
  advanced {
    auth-provider {
      class = PlainTextAuthProvider
      username = cassandra
      password = cassandra
    }
     netty {
      io-group {
        size = 0
      }
    }
    reconnect-on-init = false
    protocol.version = V4
    connection {
      pool {
        local.size = 1
        remote.size = 1
      }
      init-query-timeout = 1 second
      max-requests-per-connection = 2048
    }
  }
}

uexplorer {
    chain-indexer {
        mv-store {
            // xmx - cache-size > 3GB (jvm runtime needs at least 7GB when 4GB is for cache)
            cache-size = 4096 // in MB

            // the more compaction time the smaller db file but longer indexing time
            max-indexing-compact-time = 15s

            // same as indexing compaction time but after indexing finished
            max-idle-compact-time = 1s

            // after how many blocks the compaction process is started, low number => low db file size
            height-compact-rate = 10000
        }

        // syncing from scratch must be done from a fully synced node available on local network
        node-address-to-init-from = "http://localhost:9053"

        // polling new blocks after sync is done from local node otherwise from the entire peer network (better resiliency)
        peer-address-to-poll-from = "http://213.239.193.208:9053"

        backend-type = { type = "no-backend" }
        // backend-type = { type = "cassandra-db", parallelism = 1 }
        // backend-type = { type = "in-memory-db" }

        graph-backend-type = { type = "no-graph-backend" }
        // graph-backend-type = { type = "janus-graph" }
        // graph-backend-type = { type = "in-memory-graph" }

        protocol {
          network-prefix = 0
        }
    }
}